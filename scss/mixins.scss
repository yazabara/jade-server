
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin mediaMobile {
	@media only screen and (max-width: 767px) {
		@content;
	}
}

@mixin mediaTableDeviceWidth {
	@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
		@content;
	}
}

@mixin mediaTablet {
	@media only screen and (min-width: 768px) and (max-width: 1023px) {
		@content;
	}
}

@mixin mediaDesktop {
	@media only screen and (min-width: 1024px) {
		@content;
	}
}

@mixin mediaTabletDesktop {
	@media only screen and (min-width: 768px) {
		@content;
	}
}

@mixin mediaMobileTablet {
	@media only screen and (max-width: 1023px) {
		@content;
	}
}

@function parseInt($n) { /* 2 */
	@return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
	$px : (); /* 3 */
	$rem: (); /* 3 */

	@each $value in $values { /* 4 */

		@if $value == 0 or $value == auto { /* 5 */
			$px : append($px , $value);
			$rem: append($rem, $value);
		}

		@else {
			$unit: unit($value);    /* 6 */
			$val: parseInt($value); /* 6 */

			@if $unit == "px" {  /* 7 */
				$px : append($px,  $value);
				$rem: append($rem, ($val / 10 + rem));
			}

			@if $unit == "rem" { /* 7 */
				$px : append($px,  ($val * 10 + px));
				$rem: append($rem, $value);
			}
		}
	}

	@if $px == $rem {     /* 8 */
		#{$property}: $px;  /* 9 */
	} @else {
		#{$property}: $px;  /* 9 */
		#{$property}: $rem; /* 9 */
	}
}