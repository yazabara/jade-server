1.)Я работаю Java-разработчиков в EPAM- компании
    -опыт работы
    -немного о проектах с респонсив дизайном
2.) Первое о чем стоит сказать, это актуальность, интеренет занимает все больше и больше места в нашей жизни - отсюда резкая необходимость
использовать все возможные девайсы для общения и тд. В результате - необходимость в разработке интерфейса общего для всех девайсов.

3.) Второе о чем стоит сказать, говоря об отзывчивом дизайне...да и не только - о любом проекте/задаче - это настройка рабочего места, чтобы было
удобно, просто и продуктивно. В нашем случае - это настройка енва.

В частности тут я затрону про последнии тэнджнции в UI - разработке.

Прежде всего - я буду использовать для разработки jade - ...[что и с чем его готовят]
Про него можно почитать в интернете и тд, я лишь затрону вкратце его достоинства и недостатки.

Далее - sass - ...[что и с чем его готовят]
Опять же рассказывать как оно устроено не буду - кто хочет - посмотрит в интернете.

Далее, как обычно есть выбор начинать работать на полуготовом энве или...
чуток еще попотеть и сделать его более продуктивно

Первый путь - довольно простой, по сути у нас есть уже инструменты для верстки, и стилизации страниц
Дабы автоматизировать интерпретацию jade в html, а scss файлы в css  - к примеру сделаем два файла watcher'a
Которые будут при изменении файлов - интерпретировать.
Всё вроде хорошо, все работает... но...

Можно сделать лучше

Давайте попробуем убрать файлы watcher'ы - ... они бывают глячат, подтормаживают и тд.
Да и общей картины мы с ними не составим, ибо я на самом деле не знаю, если возможность работать с этими файлами
в других IDE отличных от intellij idea(или webstorm)

Исходя из этих соображений - давайте потратим, если говорить в проектном времени - еще день-два
на полную настройку легкого сервера на node.js

Node.js - [вкратце расскажу что как и зачем]
Ну и сборка - grunt - [что как и почему]

И так, технологии обозначили - теперь что будет представлять сервер -
Простой "контроллер", который будет делать несколько задач
    1 - контейнер для страниц и статики
    2 - возможность конкатенировать/сжимать статические ресурсы
    3 - отслеживать изменения в файлах
    4 - делать релизы (выходные файлы html, css, js и тд)
    5 - что-нить еще

[Далее покажу примерный вид данного приложения, выдам ссылку на git, кому интересно]

Вопросы по концепциям?

4.) Итак, с актуальностью, энвом покончили. Начнем самое интересное
Responsive web-design - Отзывчивый веб-дизайн

На самом деле говоря о о нем.. можно выделить 2 концептуальные идеи
    1. резиновая сетка
    2. медиа-запросы

Вопросы?) Все гениальное - просто)

Что касается резиновой сетки- тут все просто
никаких константных вычислений - только % соотношение.

Если у вас есть мокапы или спецификация - следует использовать их и любое редактор, позволяющий
определить процентное соотношение дивов/секций и тд.

В большенстве уже сущестующих фрэймворков реализована сетка - резиновая сетка, которая работает по первому принципу (всё в %)

[показать картинку]

2 - медиа запросы - тоже очень простая штука -
пишем
@media screen and (max-width: 980px) {
@media screen and (max-width: 650px) {
@media screen and (min-width: 500px) and (max-width: 800px) {
для различных разрешений
